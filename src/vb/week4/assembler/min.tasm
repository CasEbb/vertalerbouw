        PUSH        4          ; reserve space for the 4 numbers
		LOADA       0[SB]      ; address of n0: 0[SB]
		CALL        getint     ; read n0
		LOADA       1[SB]      ; address of n1: 1[SB]
		CALL        getint     ; read n1
		LOADA       2[SB]      ; address of n2: 2[SB]
		CALL        getint     ; read n2
		LOAD(1)     0[SB]      ; load n0
		LOAD(1)     1[SB]      ; load n1
		CALL        lt         ; n0 < n1?
		JUMPIF(0)   L1[CB]     ; jump if false (n1 >= n0)
		LOAD(1)     0[SB]      ; n0 on the stack
		JUMP        L2[CB]     ; go to store(min)
L1:		LOAD(1)     1[SB]      ; n1 on the stack
L2:     STORE(1)    3[SB]      ; store min
        LOAD(1)     3[SB]      ; load min
        LOAD(1)     2[SB]      ; load n2
        CALL        lt         ; min < n2?
        JUMPIF(1)   L3[CB]     ; jump if false (n2 >= min)
        LOAD(1)     2[SB]      ; load n2 onto the stack (which is min)
        JUMP        L4[CB]     ; jump to output
L3:     LOAD(1)     3[SB]      ; load min onto the stack
L4:     CALL        putint     ; print min
        POP(0)      4          ; free stack
        HALT
